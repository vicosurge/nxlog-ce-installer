include tmp/common.conf

<Extension syslog>
    Module	xm_syslog
</Extension>

<Input in>
    Module	im_file
    File	"modules/processor/evcorr/testinput_syslog.txt"
    Exec	parse_syslog_bsd();
    SavePos	FALSE
    ReadFromLast FALSE
</Input>

<Input internal>
    Module	im_internal
</Input>

<Output out>
    Module	om_file
    File	'tmp/output'
    Exec	$raw_event = $Message;
</Output>

<Output null>
    Module	om_null
</Output>

<Processor evcorr>
    Module	pm_evcorr

    TimeField	EventTime

    <Simple>
	Exec	if $Message =~ /simple/ log_info("Simple OK " + $EventTime);
    </Simple>

    <Suppressed>
	# match input event and execute an action list, but ignore the following
    	# matching events for the next t seconds.
      	Condition  $Message =~ /suppressed/
   	Interval   10
   	Exec	   log_info("Suppressed OK " + $EventTime);
    </Suppressed>

    <Pair>
	# If TriggerCondition is true, wait Interval seconds for RequiredCondition to be true and then do the Exec
    	# If Interval is 0, there is no window on matching
       	TriggerCondition  $Message =~ /pair1/
       	RequiredCondition $Message =~ /pair2/
       	Interval   2
       	Exec	   log_info("Pair OK " + $EventTime);
    </Pair>

    <Absence>
	# If TriggerCondition is true, wait Interval seconds for RequiredCondition to be true. 
	# If RequiredCondition does not become true within the specified interval then do the Exec
	TriggerCondition  $Message =~ /absence1/
   	RequiredCondition $Message =~ /absence2/
   	Interval 	  2
   	Exec	 	  log_info("Absence OK " + $EventTime);
    </Absence>

    <Thresholded>
	# if the number of events exceeeds the given threshold within the interval do the Exec
       	Condition $Message =~ /thresh/
       	Threshold 3
       	Interval 5
       	Exec	 log_info("Thresholded OK " + $EventTime);
    </Thresholded>

</Processor>

<Route 1>
    Path	in => evcorr => null
</Route>

<Route 2>
    Path	internal => out
</Route>
